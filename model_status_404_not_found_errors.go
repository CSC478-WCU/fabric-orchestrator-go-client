/*
Fabric Orchestrator API

This is Fabric Orchestrator API

API version: 1.0.1
Contact: kthare10@unc.edu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Status404NotFoundErrors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Status404NotFoundErrors{}

// Status404NotFoundErrors struct for Status404NotFoundErrors
type Status404NotFoundErrors struct {
	Message *string `json:"message,omitempty"`
	Details *string `json:"details,omitempty"`
}

// NewStatus404NotFoundErrors instantiates a new Status404NotFoundErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatus404NotFoundErrors() *Status404NotFoundErrors {
	this := Status404NotFoundErrors{}
	var message string = "Not Found"
	this.Message = &message
	return &this
}

// NewStatus404NotFoundErrorsWithDefaults instantiates a new Status404NotFoundErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatus404NotFoundErrorsWithDefaults() *Status404NotFoundErrors {
	this := Status404NotFoundErrors{}
	var message string = "Not Found"
	this.Message = &message
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *Status404NotFoundErrors) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status404NotFoundErrors) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *Status404NotFoundErrors) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *Status404NotFoundErrors) SetMessage(v string) {
	o.Message = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *Status404NotFoundErrors) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status404NotFoundErrors) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *Status404NotFoundErrors) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *Status404NotFoundErrors) SetDetails(v string) {
	o.Details = &v
}

func (o Status404NotFoundErrors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Status404NotFoundErrors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	return toSerialize, nil
}

type NullableStatus404NotFoundErrors struct {
	value *Status404NotFoundErrors
	isSet bool
}

func (v NullableStatus404NotFoundErrors) Get() *Status404NotFoundErrors {
	return v.value
}

func (v *NullableStatus404NotFoundErrors) Set(val *Status404NotFoundErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableStatus404NotFoundErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableStatus404NotFoundErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatus404NotFoundErrors(val *Status404NotFoundErrors) *NullableStatus404NotFoundErrors {
	return &NullableStatus404NotFoundErrors{value: val, isSet: true}
}

func (v NullableStatus404NotFoundErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatus404NotFoundErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


