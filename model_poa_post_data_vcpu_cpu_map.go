/*
Fabric Orchestrator API

This is Fabric Orchestrator API

API version: 1.0.1
Contact: kthare10@unc.edu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PoaPostDataVcpuCpuMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoaPostDataVcpuCpuMap{}

// PoaPostDataVcpuCpuMap struct for PoaPostDataVcpuCpuMap
type PoaPostDataVcpuCpuMap struct {
	Vcpu string `json:"vcpu"`
	Cpu string `json:"cpu"`
}

type _PoaPostDataVcpuCpuMap PoaPostDataVcpuCpuMap

// NewPoaPostDataVcpuCpuMap instantiates a new PoaPostDataVcpuCpuMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoaPostDataVcpuCpuMap(vcpu string, cpu string) *PoaPostDataVcpuCpuMap {
	this := PoaPostDataVcpuCpuMap{}
	this.Vcpu = vcpu
	this.Cpu = cpu
	return &this
}

// NewPoaPostDataVcpuCpuMapWithDefaults instantiates a new PoaPostDataVcpuCpuMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoaPostDataVcpuCpuMapWithDefaults() *PoaPostDataVcpuCpuMap {
	this := PoaPostDataVcpuCpuMap{}
	return &this
}

// GetVcpu returns the Vcpu field value
func (o *PoaPostDataVcpuCpuMap) GetVcpu() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vcpu
}

// GetVcpuOk returns a tuple with the Vcpu field value
// and a boolean to check if the value has been set.
func (o *PoaPostDataVcpuCpuMap) GetVcpuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vcpu, true
}

// SetVcpu sets field value
func (o *PoaPostDataVcpuCpuMap) SetVcpu(v string) {
	o.Vcpu = v
}

// GetCpu returns the Cpu field value
func (o *PoaPostDataVcpuCpuMap) GetCpu() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *PoaPostDataVcpuCpuMap) GetCpuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *PoaPostDataVcpuCpuMap) SetCpu(v string) {
	o.Cpu = v
}

func (o PoaPostDataVcpuCpuMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoaPostDataVcpuCpuMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vcpu"] = o.Vcpu
	toSerialize["cpu"] = o.Cpu
	return toSerialize, nil
}

func (o *PoaPostDataVcpuCpuMap) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vcpu",
		"cpu",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPoaPostDataVcpuCpuMap := _PoaPostDataVcpuCpuMap{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPoaPostDataVcpuCpuMap)

	if err != nil {
		return err
	}

	*o = PoaPostDataVcpuCpuMap(varPoaPostDataVcpuCpuMap)

	return err
}

type NullablePoaPostDataVcpuCpuMap struct {
	value *PoaPostDataVcpuCpuMap
	isSet bool
}

func (v NullablePoaPostDataVcpuCpuMap) Get() *PoaPostDataVcpuCpuMap {
	return v.value
}

func (v *NullablePoaPostDataVcpuCpuMap) Set(val *PoaPostDataVcpuCpuMap) {
	v.value = val
	v.isSet = true
}

func (v NullablePoaPostDataVcpuCpuMap) IsSet() bool {
	return v.isSet
}

func (v *NullablePoaPostDataVcpuCpuMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoaPostDataVcpuCpuMap(val *PoaPostDataVcpuCpuMap) *NullablePoaPostDataVcpuCpuMap {
	return &NullablePoaPostDataVcpuCpuMap{value: val, isSet: true}
}

func (v NullablePoaPostDataVcpuCpuMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoaPostDataVcpuCpuMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


