/*
Fabric Orchestrator API

This is Fabric Orchestrator API

API version: 1.0.1
Contact: kthare10@unc.edu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PoaPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoaPost{}

// PoaPost struct for PoaPost
type PoaPost struct {
	Operation string `json:"operation"`
	Data *PoaPostData `json:"data,omitempty"`
}

type _PoaPost PoaPost

// NewPoaPost instantiates a new PoaPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoaPost(operation string) *PoaPost {
	this := PoaPost{}
	this.Operation = operation
	return &this
}

// NewPoaPostWithDefaults instantiates a new PoaPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoaPostWithDefaults() *PoaPost {
	this := PoaPost{}
	return &this
}

// GetOperation returns the Operation field value
func (o *PoaPost) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *PoaPost) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *PoaPost) SetOperation(v string) {
	o.Operation = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PoaPost) GetData() PoaPostData {
	if o == nil || IsNil(o.Data) {
		var ret PoaPostData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoaPost) GetDataOk() (*PoaPostData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PoaPost) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given PoaPostData and assigns it to the Data field.
func (o *PoaPost) SetData(v PoaPostData) {
	o.Data = &v
}

func (o PoaPost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoaPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operation"] = o.Operation
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

func (o *PoaPost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPoaPost := _PoaPost{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPoaPost)

	if err != nil {
		return err
	}

	*o = PoaPost(varPoaPost)

	return err
}

type NullablePoaPost struct {
	value *PoaPost
	isSet bool
}

func (v NullablePoaPost) Get() *PoaPost {
	return v.value
}

func (v *NullablePoaPost) Set(val *PoaPost) {
	v.value = val
	v.isSet = true
}

func (v NullablePoaPost) IsSet() bool {
	return v.isSet
}

func (v *NullablePoaPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoaPost(val *PoaPost) *NullablePoaPost {
	return &NullablePoaPost{value: val, isSet: true}
}

func (v NullablePoaPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoaPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


