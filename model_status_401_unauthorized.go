/*
Fabric Orchestrator API

This is Fabric Orchestrator API

API version: 1.0.1
Contact: kthare10@unc.edu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Status401Unauthorized type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Status401Unauthorized{}

// Status401Unauthorized struct for Status401Unauthorized
type Status401Unauthorized struct {
	Errors []Status401UnauthorizedErrors `json:"errors,omitempty"`
	Type *string `json:"type,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Status *int32 `json:"status,omitempty"`
}

// NewStatus401Unauthorized instantiates a new Status401Unauthorized object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatus401Unauthorized() *Status401Unauthorized {
	this := Status401Unauthorized{}
	var type_ string = "error"
	this.Type = &type_
	var size int32 = 1
	this.Size = &size
	var status int32 = 401
	this.Status = &status
	return &this
}

// NewStatus401UnauthorizedWithDefaults instantiates a new Status401Unauthorized object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatus401UnauthorizedWithDefaults() *Status401Unauthorized {
	this := Status401Unauthorized{}
	var type_ string = "error"
	this.Type = &type_
	var size int32 = 1
	this.Size = &size
	var status int32 = 401
	this.Status = &status
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *Status401Unauthorized) GetErrors() []Status401UnauthorizedErrors {
	if o == nil || IsNil(o.Errors) {
		var ret []Status401UnauthorizedErrors
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status401Unauthorized) GetErrorsOk() ([]Status401UnauthorizedErrors, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *Status401Unauthorized) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []Status401UnauthorizedErrors and assigns it to the Errors field.
func (o *Status401Unauthorized) SetErrors(v []Status401UnauthorizedErrors) {
	o.Errors = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Status401Unauthorized) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status401Unauthorized) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Status401Unauthorized) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Status401Unauthorized) SetType(v string) {
	o.Type = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Status401Unauthorized) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status401Unauthorized) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Status401Unauthorized) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *Status401Unauthorized) SetSize(v int32) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Status401Unauthorized) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Status401Unauthorized) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Status401Unauthorized) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *Status401Unauthorized) SetStatus(v int32) {
	o.Status = &v
}

func (o Status401Unauthorized) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Status401Unauthorized) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableStatus401Unauthorized struct {
	value *Status401Unauthorized
	isSet bool
}

func (v NullableStatus401Unauthorized) Get() *Status401Unauthorized {
	return v.value
}

func (v *NullableStatus401Unauthorized) Set(val *Status401Unauthorized) {
	v.value = val
	v.isSet = true
}

func (v NullableStatus401Unauthorized) IsSet() bool {
	return v.isSet
}

func (v *NullableStatus401Unauthorized) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatus401Unauthorized(val *Status401Unauthorized) *NullableStatus401Unauthorized {
	return &NullableStatus401Unauthorized{value: val, isSet: true}
}

func (v NullableStatus401Unauthorized) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatus401Unauthorized) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


