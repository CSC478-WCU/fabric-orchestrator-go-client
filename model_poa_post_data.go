/*
Fabric Orchestrator API

This is Fabric Orchestrator API

API version: 1.0.1
Contact: kthare10@unc.edu
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PoaPostData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoaPostData{}

// PoaPostData struct for PoaPostData
type PoaPostData struct {
	VcpuCpuMap []PoaPostDataVcpuCpuMap `json:"vcpu_cpu_map,omitempty"`
	NodeSet []string `json:"node_set,omitempty"`
	Bdf []string `json:"bdf,omitempty"`
	Keys []PoaPostDataKeys `json:"keys,omitempty"`
}

// NewPoaPostData instantiates a new PoaPostData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoaPostData() *PoaPostData {
	this := PoaPostData{}
	return &this
}

// NewPoaPostDataWithDefaults instantiates a new PoaPostData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoaPostDataWithDefaults() *PoaPostData {
	this := PoaPostData{}
	return &this
}

// GetVcpuCpuMap returns the VcpuCpuMap field value if set, zero value otherwise.
func (o *PoaPostData) GetVcpuCpuMap() []PoaPostDataVcpuCpuMap {
	if o == nil || IsNil(o.VcpuCpuMap) {
		var ret []PoaPostDataVcpuCpuMap
		return ret
	}
	return o.VcpuCpuMap
}

// GetVcpuCpuMapOk returns a tuple with the VcpuCpuMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoaPostData) GetVcpuCpuMapOk() ([]PoaPostDataVcpuCpuMap, bool) {
	if o == nil || IsNil(o.VcpuCpuMap) {
		return nil, false
	}
	return o.VcpuCpuMap, true
}

// HasVcpuCpuMap returns a boolean if a field has been set.
func (o *PoaPostData) HasVcpuCpuMap() bool {
	if o != nil && !IsNil(o.VcpuCpuMap) {
		return true
	}

	return false
}

// SetVcpuCpuMap gets a reference to the given []PoaPostDataVcpuCpuMap and assigns it to the VcpuCpuMap field.
func (o *PoaPostData) SetVcpuCpuMap(v []PoaPostDataVcpuCpuMap) {
	o.VcpuCpuMap = v
}

// GetNodeSet returns the NodeSet field value if set, zero value otherwise.
func (o *PoaPostData) GetNodeSet() []string {
	if o == nil || IsNil(o.NodeSet) {
		var ret []string
		return ret
	}
	return o.NodeSet
}

// GetNodeSetOk returns a tuple with the NodeSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoaPostData) GetNodeSetOk() ([]string, bool) {
	if o == nil || IsNil(o.NodeSet) {
		return nil, false
	}
	return o.NodeSet, true
}

// HasNodeSet returns a boolean if a field has been set.
func (o *PoaPostData) HasNodeSet() bool {
	if o != nil && !IsNil(o.NodeSet) {
		return true
	}

	return false
}

// SetNodeSet gets a reference to the given []string and assigns it to the NodeSet field.
func (o *PoaPostData) SetNodeSet(v []string) {
	o.NodeSet = v
}

// GetBdf returns the Bdf field value if set, zero value otherwise.
func (o *PoaPostData) GetBdf() []string {
	if o == nil || IsNil(o.Bdf) {
		var ret []string
		return ret
	}
	return o.Bdf
}

// GetBdfOk returns a tuple with the Bdf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoaPostData) GetBdfOk() ([]string, bool) {
	if o == nil || IsNil(o.Bdf) {
		return nil, false
	}
	return o.Bdf, true
}

// HasBdf returns a boolean if a field has been set.
func (o *PoaPostData) HasBdf() bool {
	if o != nil && !IsNil(o.Bdf) {
		return true
	}

	return false
}

// SetBdf gets a reference to the given []string and assigns it to the Bdf field.
func (o *PoaPostData) SetBdf(v []string) {
	o.Bdf = v
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *PoaPostData) GetKeys() []PoaPostDataKeys {
	if o == nil || IsNil(o.Keys) {
		var ret []PoaPostDataKeys
		return ret
	}
	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoaPostData) GetKeysOk() ([]PoaPostDataKeys, bool) {
	if o == nil || IsNil(o.Keys) {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *PoaPostData) HasKeys() bool {
	if o != nil && !IsNil(o.Keys) {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []PoaPostDataKeys and assigns it to the Keys field.
func (o *PoaPostData) SetKeys(v []PoaPostDataKeys) {
	o.Keys = v
}

func (o PoaPostData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoaPostData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VcpuCpuMap) {
		toSerialize["vcpu_cpu_map"] = o.VcpuCpuMap
	}
	if !IsNil(o.NodeSet) {
		toSerialize["node_set"] = o.NodeSet
	}
	if !IsNil(o.Bdf) {
		toSerialize["bdf"] = o.Bdf
	}
	if !IsNil(o.Keys) {
		toSerialize["keys"] = o.Keys
	}
	return toSerialize, nil
}

type NullablePoaPostData struct {
	value *PoaPostData
	isSet bool
}

func (v NullablePoaPostData) Get() *PoaPostData {
	return v.value
}

func (v *NullablePoaPostData) Set(val *PoaPostData) {
	v.value = val
	v.isSet = true
}

func (v NullablePoaPostData) IsSet() bool {
	return v.isSet
}

func (v *NullablePoaPostData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoaPostData(val *PoaPostData) *NullablePoaPostData {
	return &NullablePoaPostData{value: val, isSet: true}
}

func (v NullablePoaPostData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoaPostData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


